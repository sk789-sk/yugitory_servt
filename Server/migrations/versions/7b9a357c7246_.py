"""empty message

Revision ID: 7b9a357c7246
Revises: 
Create Date: 2024-03-11 00:03:30.213922

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7b9a357c7246'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Banlists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Banlists'))
    )
    op.create_table('Cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('attack', sa.Integer(), nullable=True),
    sa.Column('defense', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('isEffect', sa.Boolean(), nullable=True),
    sa.Column('isTuner', sa.Boolean(), nullable=True),
    sa.Column('isFlip', sa.Boolean(), nullable=True),
    sa.Column('isSpirit', sa.Boolean(), nullable=True),
    sa.Column('isUnion', sa.Boolean(), nullable=True),
    sa.Column('isGemini', sa.Boolean(), nullable=True),
    sa.Column('isPendulum', sa.Boolean(), nullable=True),
    sa.Column('isRitual', sa.Boolean(), nullable=True),
    sa.Column('isToon', sa.Boolean(), nullable=True),
    sa.Column('isFusion', sa.Boolean(), nullable=True),
    sa.Column('isSynchro', sa.Boolean(), nullable=True),
    sa.Column('isXYZ', sa.Boolean(), nullable=True),
    sa.Column('isLink', sa.Boolean(), nullable=True),
    sa.Column('card_type', sa.String(), nullable=True),
    sa.Column('card_race', sa.String(), nullable=True),
    sa.Column('card_attribute', sa.String(), nullable=True),
    sa.Column('LegalDate', sa.String(), nullable=True),
    sa.Column('card_image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Cards'))
    )
    op.create_table('ReleaseSets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('releaseDate', sa.String(), nullable=True),
    sa.Column('card_count', sa.Integer(), nullable=True),
    sa.Column('set_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ReleaseSets'))
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('_password_hash', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('profile', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Users')),
    sa.UniqueConstraint('username', name=op.f('uq_Users_username'))
    )
    op.create_table('BanlistCards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('banlist_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['banlist_id'], ['Banlists.id'], name=op.f('fk_BanlistCards_banlist_id_Banlists')),
    sa.ForeignKeyConstraint(['card_id'], ['Cards.id'], name=op.f('fk_BanlistCards_card_id_Cards')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_BanlistCards'))
    )
    op.create_table('CardsinSets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_code', sa.String(), nullable=True),
    sa.Column('rarity', sa.String(), nullable=True),
    sa.Column('set_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['Cards.id'], name=op.f('fk_CardsinSets_card_id_Cards')),
    sa.ForeignKeyConstraint(['set_id'], ['ReleaseSets.id'], name=op.f('fk_CardsinSets_set_id_ReleaseSets')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_CardsinSets'))
    )
    op.create_table('Decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('isPublic', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name=op.f('fk_Decks_user_id_Users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Decks'))
    )
    op.create_table('CardsinDecks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('deck_id', sa.Integer(), nullable=True),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['Cards.id'], name=op.f('fk_CardsinDecks_card_id_Cards')),
    sa.ForeignKeyConstraint(['deck_id'], ['Decks.id'], name=op.f('fk_CardsinDecks_deck_id_Decks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_CardsinDecks'))
    )
    op.create_table('Inventories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('isFirstEd', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cardinSet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cardinSet_id'], ['CardsinSets.id'], name=op.f('fk_Inventories_cardinSet_id_CardsinSets')),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name=op.f('fk_Inventories_user_id_Users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Inventories'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Inventories')
    op.drop_table('CardsinDecks')
    op.drop_table('Decks')
    op.drop_table('CardsinSets')
    op.drop_table('BanlistCards')
    op.drop_table('Users')
    op.drop_table('ReleaseSets')
    op.drop_table('Cards')
    op.drop_table('Banlists')
    # ### end Alembic commands ###
